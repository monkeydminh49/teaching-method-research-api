name: Build on DockerHub and Deploy to home server
on:
  push:
    branches:
      - develop
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
  SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
  ZEROTIER_NETWORK_ID: ${{ secrets.ZEROTIER_NETWORK_ID }}
  ZEROTIER_CENTRAL_TOKEN: ${{ secrets.ZEROTIER_CENTRAL_TOKEN }}
  SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
  SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Environment Variables
        run: |
          echo "Username: ${{ secrets.SPRING_DATASOURCE_USERNAME }}"
          echo "Password: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Set up the Maven dependencies caching
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install Maven dependencies
        run: mvn install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          dockerfile: ./Dockerfile
          tags: monkeydminh49/research-api:latest
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: ZeroTier
      uses: zerotier/github-action@v1.0.1
      with:
        network_id: ${{ env.ZEROTIER_NETWORK_ID }}
        auth_token: ${{ env.ZEROTIER_CENTRAL_TOKEN }}
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}

    - name: Executing remote ssh commands using password
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 172.22.8.5
        username: ${{ env.SSH_USERNAME }}
        password: ${{ env.SSH_PASSWORD }}
        port: 22
        script: |
          echo ${{ env.SSH_PASSWORD }} | sudo -S docker pull monkeydminh49/quiz-api:latest
          echo ${{ env.SSH_PASSWORD }} | sudo -S docker stop research-api || true
          echo ${{ env.SSH_PASSWORD }} | sudo -S docker rm research-api || true
          echo ${{ env.SSH_PASSWORD }} | sudo -S docker run -d --name research-api -p 80:8080 monkeydminh49/quiz-api:latest
          
    # - name: Pull Docker image
    #   run: |
    #     sshpass -p ${{ env.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ env.SSH_USERNAME }}@172.22.8.5 'sudo docker pull monkeydminh49/quiz-api:latest'
    # - name: Stop running container
    #   run: |
    #     sshpass -p ${{ env.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ env.SSH_USERNAME }}@172.22.8.5 'sudo docker stop research-api || true'
    #     sshpass -p ${{ env.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ env.SSH_USERNAME }}@172.22.8.5 'sudo docker rm research-api || true'
    # - name: Run new container
    #   run: |
    #     sshpass -p ${{ env.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ env.SSH_USERNAME }}@172.22.8.5 'sudo docker run -d --name research-api -e SPRING_DATASOURCE_USERNAME='${{ secrets.SPRING_DATASOURCE_USERNAME }}' -e SPRING_DATASOURCE_PASSWORD='${{ secrets.SPRING_DATASOURCE_PASSWORD }}' -p 80:8080 monkeydminh49/quiz-api:latest'
